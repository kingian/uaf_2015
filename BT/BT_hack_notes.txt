#########Bullet Time Hacking Notes##########

Go here for a quick Tutorial on installing motion on the Pi (doesn't take long):
http://pingbin.com/2012/12/raspberry-pi-web-cam-server-motion/

##Multiple Cams##
Find the motion.conf file here: /etc/motion/
To get multiple cameras working you need to edit the path to the thread files at the bottom of the motion.conf file.  The paths need to be adjusted so they point at the folder containing the thread.conf files, in our case that in: /etc/motion.

In order to make things work with saving multiple camera streams each camera must have it's own destination folder for output.  This is generally placed in the thread file.  I'm attached a modified thread.conf file from my hacking last night at the bottom of this document.

In the past we've been running motion as a service with: sudo service motion start
I recommend against this because motion as a service will quietly throw exceptions and give you no clues as to what's broke.  You're better off using: motion -n  (don't even need the ./).  Running motion in the foreground provides a window into the inner workings of motion, and more importantly displays exceptions.


    # /usr/local/etc/thread1.conf
    #
    # This config file was generated by motion 3.2.12 


    
    ###########################################################
    # Capture device options
    ############################################################

    # Videodevice to be used for capturing  (default /dev/video0)
    # for FreeBSD default is /dev/bktr0 
    videodevice /dev/video0

    # The video input to be used (default: 8)
    # Should normally be set to 1 for video/TV cards, and 8 for USB cameras 
    input 8

    # Draw a user defined text on the images using same options as C function strftime(3)
    # Default: Not defined = no text
    # Text is placed in lower left corner
    text_left CAMERA 1


    ############################################################
    # Target Directories and filenames For Images And Films
    # For the options snapshot_, jpeg_, mpeg_ and timelapse_filename
    # you can use conversion specifiers
    # %Y = year, %m = month, %d = date,
    # %H = hour, %M = minute, %S = second,
    # %v = event, %q = frame number, %t = thread (camera) number,
    # %D = changed pixels, %N = noise level,
    # %i and %J = width and height of motion area,
    # %K and %L = X and Y coordinates of motion center
    # %C = value defined by text_event
    # Quotation marks round string are allowed.
    ############################################################

    # Target base directory for pictures and films
    # Recommended to use absolute patch. (Default: current working directory)
    target_dir /tmp/motion/cam1


    ############################################################
    # Live Webcam Server
    ############################################################

    # The mini-http server listens to this port for requests (default: 0 = disabled)
    webcam_port 8081

    #!!!! These commands down here jack things up unless you have the .pl files.  Not using !!!
    # Command to be executed when a picture (.ppm|.jpg) is saved (default: none)
    # The filename of the picture is appended as an argument for the command.
    #on_picture_save /tmp/motion/cam1/camparse1.pl

    # Command to be executed when a movie file (.mpg|.avi) is closed. (default: none)
    # Filename of movie is appended as an argument for the command.
    #on_movie_end  /tmp/motion/cam1/mpegparse1.pl

Linux deleting files older than x seconds old
    find -not -newermt '-30 seconds' -delete

#!/bin/bash
while true
do
 /home/ramesh/backup.sh
 sleep 5
done

http://www.tuxation.com/setuid-on-shell-scripts.html

This is the cleaning script.  It's designed to run in the background and clean out old files.  The sleep value and '-10 seconds' value can be changed to increase or decrease the number of in the directory at any given time.  The -name '*.txt' flag was necessary to prevent the directory itself from being deleted (when there were no other files to delete).

#!/bin/bash
while true
do
 sleep 10
 find ~/Sandbox/timers/tmp/ -name "*.txt" -not -newermt '-10 seconds' -delete
done

How to call shell commands from a python script
from subprocess import call
call(["ls", "-l"])

http://stackoverflow.com/questions/1378974/is-there-a-way-to-start-stop-linux-processes-with-python

import subprocess
import time

proc = subprocess.Popen(["sleep", "60"], shell=False)
print 'poll =', proc.poll(), '("None" means process not terminated yet)'
time.sleep(3)
subprocess.call(["kill", "-9", "%d" % proc.pid])
proc.wait()
print 'poll =', proc.poll()

The timed output shows that it was terminated after about 3 seconds, and not 60 as the call to sleep suggests.

$ time python prockill.py 
poll = None ("None" means process not terminated yet)
poll = -9

real    0m3.082s
user    0m0.055s
sys 0m0.029s

Counts files in a directory
ls -1 targetdir | wc -l

pgrep ROCKS, hand it a process name, you get a pid.

ubuntu virtualbox enable shared folder: sudo adduser USERNAME vboxsf

FAST FILE TRANSFER
    http://unix.stackexchange.com/questions/48399/fast-way-to-copy-a-large-file-on-a-lan
    tar zcf - bigfile.m4p | mbuffer -s 1K -m 512 | ssh otherhost "tar zxf -"

Install Opencv-python binding on Tegra
    https://devtalk.nvidia.com/default/topic/740390/tegra-jetson-gpu-accleration-in-opencv-/
    sudo apt-get install libopencv4tegra-python

TO STOP MOTION FROM STARTING
update-rc.d SERVICENAME disable

Imaging an SD card
https://www.raspberrypi.org/forums/viewtopic.php?f=91&t=46911
    - sudo fdisk -l
    - sudo dd bs=4M if=/dev/sdb | gzip > /home/your_username/image`date +%d%m%y`.gz
    - sudo gzip -dc /home/your_username/image.gz | dd bs=4M of=/dev/sdb

Set Static IP via CLI
ifconfig eth0 XXX.XXX.XXX.XXX netmask 255.255.255.0 up
